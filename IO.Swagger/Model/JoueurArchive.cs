/* 
 * API Escape Game
 *
 * Service web pour g√©rer les informations de EGC
 *
 * OpenAPI spec version: beta 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// JoueurArchive
    /// </summary>
    [DataContract]
    public partial class JoueurArchive :  IEquatable<JoueurArchive>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="JoueurArchive" /> class.
        /// </summary>
        /// <param name="Idjoueurarchive">Idjoueurarchive.</param>
        /// <param name="Pseudoarchive">Pseudoarchive.</param>
        /// <param name="Nomarchive">Nomarchive.</param>
        /// <param name="Prenomarchive">Prenomarchive.</param>
        /// <param name="Datenaissancearchive">Datenaissancearchive.</param>
        /// <param name="Datecreationarchive">Datecreationarchive.</param>
        /// <param name="Numerotelephonearchive">Numerotelephonearchive.</param>
        /// <param name="Nombrepartiesarchive">Nombrepartiesarchive.</param>
        public JoueurArchive(int? Idjoueurarchive = default(int?), string Pseudoarchive = default(string), string Nomarchive = default(string), string Prenomarchive = default(string), DateTime? Datenaissancearchive = default(DateTime?), DateTime? Datecreationarchive = default(DateTime?), string Numerotelephonearchive = default(string), int? Nombrepartiesarchive = default(int?))
        {
            this.Idjoueurarchive = Idjoueurarchive;
            this.Pseudoarchive = Pseudoarchive;
            this.Nomarchive = Nomarchive;
            this.Prenomarchive = Prenomarchive;
            this.Datenaissancearchive = Datenaissancearchive;
            this.Datecreationarchive = Datecreationarchive;
            this.Numerotelephonearchive = Numerotelephonearchive;
            this.Nombrepartiesarchive = Nombrepartiesarchive;
        }
        
        /// <summary>
        /// Gets or Sets Idjoueurarchive
        /// </summary>
        [DataMember(Name="idjoueurarchive", EmitDefaultValue=false)]
        public int? Idjoueurarchive { get; set; }

        /// <summary>
        /// Gets or Sets Pseudoarchive
        /// </summary>
        [DataMember(Name="pseudoarchive", EmitDefaultValue=false)]
        public string Pseudoarchive { get; set; }

        /// <summary>
        /// Gets or Sets Nomarchive
        /// </summary>
        [DataMember(Name="nomarchive", EmitDefaultValue=false)]
        public string Nomarchive { get; set; }

        /// <summary>
        /// Gets or Sets Prenomarchive
        /// </summary>
        [DataMember(Name="prenomarchive", EmitDefaultValue=false)]
        public string Prenomarchive { get; set; }

        /// <summary>
        /// Gets or Sets Datenaissancearchive
        /// </summary>
        [DataMember(Name="datenaissancearchive", EmitDefaultValue=false)]
        public DateTime? Datenaissancearchive { get; set; }

        /// <summary>
        /// Gets or Sets Datecreationarchive
        /// </summary>
        [DataMember(Name="datecreationarchive", EmitDefaultValue=false)]
        public DateTime? Datecreationarchive { get; set; }

        /// <summary>
        /// Gets or Sets Numerotelephonearchive
        /// </summary>
        [DataMember(Name="numerotelephonearchive", EmitDefaultValue=false)]
        public string Numerotelephonearchive { get; set; }

        /// <summary>
        /// Gets or Sets Nombrepartiesarchive
        /// </summary>
        [DataMember(Name="nombrepartiesarchive", EmitDefaultValue=false)]
        public int? Nombrepartiesarchive { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class JoueurArchive {\n");
            sb.Append("  Idjoueurarchive: ").Append(Idjoueurarchive).Append("\n");
            sb.Append("  Pseudoarchive: ").Append(Pseudoarchive).Append("\n");
            sb.Append("  Nomarchive: ").Append(Nomarchive).Append("\n");
            sb.Append("  Prenomarchive: ").Append(Prenomarchive).Append("\n");
            sb.Append("  Datenaissancearchive: ").Append(Datenaissancearchive).Append("\n");
            sb.Append("  Datecreationarchive: ").Append(Datecreationarchive).Append("\n");
            sb.Append("  Numerotelephonearchive: ").Append(Numerotelephonearchive).Append("\n");
            sb.Append("  Nombrepartiesarchive: ").Append(Nombrepartiesarchive).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as JoueurArchive);
        }

        /// <summary>
        /// Returns true if JoueurArchive instances are equal
        /// </summary>
        /// <param name="input">Instance of JoueurArchive to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(JoueurArchive input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Idjoueurarchive == input.Idjoueurarchive ||
                    (this.Idjoueurarchive != null &&
                    this.Idjoueurarchive.Equals(input.Idjoueurarchive))
                ) && 
                (
                    this.Pseudoarchive == input.Pseudoarchive ||
                    (this.Pseudoarchive != null &&
                    this.Pseudoarchive.Equals(input.Pseudoarchive))
                ) && 
                (
                    this.Nomarchive == input.Nomarchive ||
                    (this.Nomarchive != null &&
                    this.Nomarchive.Equals(input.Nomarchive))
                ) && 
                (
                    this.Prenomarchive == input.Prenomarchive ||
                    (this.Prenomarchive != null &&
                    this.Prenomarchive.Equals(input.Prenomarchive))
                ) && 
                (
                    this.Datenaissancearchive == input.Datenaissancearchive ||
                    (this.Datenaissancearchive != null &&
                    this.Datenaissancearchive.Equals(input.Datenaissancearchive))
                ) && 
                (
                    this.Datecreationarchive == input.Datecreationarchive ||
                    (this.Datecreationarchive != null &&
                    this.Datecreationarchive.Equals(input.Datecreationarchive))
                ) && 
                (
                    this.Numerotelephonearchive == input.Numerotelephonearchive ||
                    (this.Numerotelephonearchive != null &&
                    this.Numerotelephonearchive.Equals(input.Numerotelephonearchive))
                ) && 
                (
                    this.Nombrepartiesarchive == input.Nombrepartiesarchive ||
                    (this.Nombrepartiesarchive != null &&
                    this.Nombrepartiesarchive.Equals(input.Nombrepartiesarchive))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Idjoueurarchive != null)
                    hashCode = hashCode * 59 + this.Idjoueurarchive.GetHashCode();
                if (this.Pseudoarchive != null)
                    hashCode = hashCode * 59 + this.Pseudoarchive.GetHashCode();
                if (this.Nomarchive != null)
                    hashCode = hashCode * 59 + this.Nomarchive.GetHashCode();
                if (this.Prenomarchive != null)
                    hashCode = hashCode * 59 + this.Prenomarchive.GetHashCode();
                if (this.Datenaissancearchive != null)
                    hashCode = hashCode * 59 + this.Datenaissancearchive.GetHashCode();
                if (this.Datecreationarchive != null)
                    hashCode = hashCode * 59 + this.Datecreationarchive.GetHashCode();
                if (this.Numerotelephonearchive != null)
                    hashCode = hashCode * 59 + this.Numerotelephonearchive.GetHashCode();
                if (this.Nombrepartiesarchive != null)
                    hashCode = hashCode * 59 + this.Nombrepartiesarchive.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
